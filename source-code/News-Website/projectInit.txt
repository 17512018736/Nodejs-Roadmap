
1.npm init 初始化项目

2.安装react
	npm install react --save-dev
	npm install react-dom --save-dev
	npm install babel-loader --save-dev
	npm install babel-core --save-dev
	npm install babel-preset-es2015 --save-dev
	npm install babel-preset-react --save-dev

3.webpack配置react
	npm install webpack --save-dev
	npm install webpack-dev-server --save-dev
	在package.json文件scripts部分添加如下代码
	"start": "webpack-dev-server --hot --open --content-base ./dist/",
	"deploy": "webpack -p --progress --config webpack.config.js"
	--content-base参数指定根html文件所在位置
	npm start 自动编译代码并刷新
	npm run build 编译生产环境代码

	webpack --watch  实时编译 需要刷新
	webpack-dev-server
	webpack-dev-server --contentbase -src --inline --hot 实时编译 热加载

4.配置
	npm install react-router --save-dev

5.css模块化
	npm install --save-dev babel-plugin-react-html-attrs  可以简化类名为class
	npm install css-loader@^0.25.0 --save-dev
	npm install style-loader@^0.13.1 --save-dev
	webpack配置
	query: {
      plugins: ['react-html-attrs'] //添加组件的插件配置
    }
	{
		test: /\.css$/,
		loader: 'style-loader!css-loader?modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]'
	}
	注意：
	早前版本可以简写 {test: /\.css$/, loader: 'style!css'}
	现在版本不能简写省去-loader {test: /\.css$/, loader: 'style-loader!css-loader'}

6.ant-design样式的引入
	npm install antd --save-dev 
	import 'antd/dist/antd.css'; //引入样式
	loader: 'style-loader!css-loader' webpack配置css

7.注意ant-design与css Modules的冲突
	配置了css-modules的相关功能会把antd的样式也hash化了，导致样式不匹配
	解决方法：
	定义两个css loaders像下面这样
	// CSS modules
	{
        test: /\.css$/,
        exclude: /node_modules/,
        loader: 'style-loader!css-loader?modules'
    },
    //ant-design
    {
        test: /\.css$/,
        include: /node_modules/,
        loader: 'style-loader!css-loader'
    }

